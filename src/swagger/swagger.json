{
  "swagger": "2.0",
  "info": {
    "description": "API'S for Rental vehicle and User Data",
    "version": "1.0.0",
    "title": "Vehicle Rental API",
    "contact": {
      "email": "abc@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:5000",
  "basePath": "/",
  "paths": {
    "/vehicle-types": {
      "get": {
        "summary": "Get all vehicles",
        "description": "Get all vehicles",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vehicle"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/loginuser": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user credentials",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehicles/{id}": {
      "get": {
        "summary": "Get a particular vehicle",
        "description": "Get a particular vehicle by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the vehicle",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rentals": {
      "post": {
        "summary": "Create a new rental",
        "description": "Create a new rental",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rental"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Rental created successfully",
            "schema": {
              "$ref": "#/definitions/Rental"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vehiclerentbyuser": {
      "get": {
        "summary": "Get rentals by user",
        "description": "Get all vehicle rentals by a user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Rental"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/userdetails": {
      "get": {
        "summary": "Get user details",
        "description": "Get user details by ID",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Vehicle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["hatchback", "suv", "sedan", "cruiser", "sports"]
        },
        "name": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Rental": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "vehicleId": {
          "type": "string"
        },
        "rentalDates": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
